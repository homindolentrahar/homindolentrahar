---
import { Button } from "@/components/ui/button";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

const baseUrl = import.meta.env.BASE_URL;
const posts: CollectionEntry<"leet">[] = (await getCollection("leet")).slice(
  0,
  4
);
---

<div
  id="leet"
  class="grid grid-cols-1 lg:grid-cols-2 content-center gap-8 md:gap-16 w-full md:w-10/12 h-fit lg:h-[640px] px-8 py-12"
>
  <div class="flex flex-col items-center lg:items-start">
    <h1
      class="text-3xl lg:text-4xl text-center lg:text-start font-semibold text-gray-950 dark:text-white"
    >
      Leetcode Practices
    </h1>
    <p
      class="text-sm md:text-base text-center lg:text-start text-gray-500 dark:text-gray-400 mt-4"
    >
      This is my redemption arc. I'm trying to solve LeetCode problems to
      improve my problem-solving skills. I'll be documenting my journey here, by
      providing the problem statement, my thought process, and the final
      solution.
    </p>
    <a href={`${baseUrl}/leet`}>
      <Button className="mt-8 w-full lg:w-fit h-fit px-14 py-[10px]"
        >Explore</Button
      >
    </a>
  </div>
  <div class="grid grid-cols-1 md:grid-cols-2 items-stretch gap-4">
    {
      posts.map((post) => (
        <a
          href={`${baseUrl}/leet/${post.slug}`}
          aria-label="link euy"
          class="block p-4 rounded-lg border border-gray-200 dark:border-gray-800 hover:shadow dark:hover:bg-gray-900 transition-all"
        >
          <div class="h-full flex flex-col items-start">
            <div class="flex flex-col flex-grow items-start ">
              <h1 class="text-lg font-semibold text-gray-950 dark:text-white">
                {post.data.title}
              </h1>
              <p class="text-sm text-gray-500 dark:text-gray-400 line-clamp-2 overflow-ellipsis">
                {post.data.desc}
              </p>
            </div>
            <div class="flex flex-row justify-between items-center w-full mt-4">
              <div class="flex flex-row gap-2 flex-grow">
                {post.data.tags.map((e: string) => (
                  <p class="text-sm font-medium text-gray-600 dark:text-gray-500">
                    #{e}
                  </p>
                ))}
              </div>
              <span class="px-3 py-1 rounded-lg bg-emerald-600/15 text-emerald-600 text-sm font-semibold">
                {post.data.difficulty.title}
              </span>
            </div>
          </div>
        </a>
      ))
    }
  </div>
</div>
